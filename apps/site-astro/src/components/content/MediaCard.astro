---
import { cn } from "@/lib/utils";
import type { HTMLAttributes } from "astro/types";
import type { Image } from "sanity-zod-types";
import SanityImage from "./SanityImage.astro";
import { splitIntoLines } from "@/lib/stringUtils";

interface Props extends HTMLAttributes<"figure"> {
  title: string;
  subtitle: string | null;
  media: string | Image | null;
  description?: string | null;
  format?: "book";
}

const {
  title,
  subtitle,
  media,
  description,
  format = "book",
  class: className,
} = Astro.props;

let imageWidth: number, imageHeight: number;

// This is necessary for Tailwind to output the max
// width class we build on the <figure/>
const maxWidthClasses = ["max-w-[220px]"];

switch (format) {
  case "book":
    imageWidth = 220;
    imageHeight = imageWidth * 1.5;
    break;
  default:
    // use a square image as default
    imageWidth = 220;
    imageHeight = imageWidth;
    break;
}

const lines = splitIntoLines(description ?? "");
---

<figure
  class={cn(
    "flex flex-col items-start sm:flex-row gap-8 max-w-full",
    className,
  )}
>
  {
    typeof media === "object" && media?._type === "image" && (
      <SanityImage
        image={media}
        width={imageWidth}
        height={imageHeight}
        alt={`${format} for ${title}`}
        class={cn("w-1/2", `max-w-[${imageWidth}px]`)}
      />
    )
  }
  {
    typeof media === "string" && (
      <img
        src={media}
        width={imageWidth}
        height={imageHeight}
        alt={`${format} cover for ${title}`}
      />
    )
  }
  <figcaption>
    <div
      class="mb-4 text-4xl font-semibold leading-none tracking-wide text-primary/80"
    >
      {title}
    </div>
    {subtitle && <p class="mb-2 text-xl text-muted-foreground">{subtitle}</p>}
    <div class="text-balance max-w-sm">
      {lines.map((line, i) => <p class="text-lg" set:html={line} />)}
    </div>
  </figcaption>
</figure>
